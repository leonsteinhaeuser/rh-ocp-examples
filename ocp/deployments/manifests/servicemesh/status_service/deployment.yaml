apiVersion: apps/v1
kind: Deployment
metadata:
  name: &name status-service
  labels: &labels
    app.kubernetes.io/name: *name
    app.kubernetes.io/instance: *name
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: microservices-demo
    app.kubernetes.io/version: v1
    sidecar.istio.io/inject: "true"
    app: *name
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels: *labels
  template:
    metadata:
      labels: *labels
    spec:
      securityContext:
        runAsUser: 65535
        runAsGroup: 65535
      automountServiceAccountToken: true
      serviceAccountName: *name
      containers:
        - name: *name
          image: ghcr.io/leonsteinhaeuser/rh-ocp-examples-status:main
          imagePullPolicy: Always
          env:
            - name: EXTERNAL_SERVICES_TO_WATCH
              value: "redhat=http://www-redhat-com:80"
          ports:
            - containerPort: 8082
              name: http
              protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 32Mi
            requests:
              cpu: 10m
              memory: 32Mi
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          securityContext:
            runAsUser: 65535
            runAsGroup: 65535
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - all
